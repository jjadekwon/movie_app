{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movie","getMovies","a","axios","get","movies","data","setState","this","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4TA+BeA,MA3Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACTD,EAAOI,IAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,MAGnD,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UC0IDC,G,iNApJbC,MAAQ,CAENC,WAAW,EACXC,MAAO,I,EAGTC,U,qBAAY,8BAAAC,EAAA,qEAC6BC,IAAMC,IAAI,4DADvC,gBACWC,EADX,EACHC,KAAOA,KAAOD,OACrB,EAAKE,SAAS,CAACF,SAAQN,WAAW,IAFxB,yC,mFAMVS,KAAKP,c,+BAMG,IAAD,EACqBO,KAAKV,MAA1BC,EADA,EACAA,UAAWM,EADX,EACWA,OAClB,OACE,6BAAShB,UAAU,aAChBU,EACK,yBAAKV,UAAU,UACf,0BAAMA,UAAU,gBAAhB,eAGD,yBAAKA,UAAU,UACZgB,EAAOb,IAAI,SAAAQ,GAAK,OAChB,kBAAC,EAAD,CACEL,IAAKK,EAAMS,GACXA,GAAIT,EAAMS,GACVzB,KAAMgB,EAAMhB,KACZC,MAAOe,EAAMf,MACbC,QAASc,EAAMd,QACfC,OAAQa,EAAMU,mBACdtB,OAAQY,EAAMZ,iB,GArCduB,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d8d58dc9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Movie.css\";\n\nfunction Movie({year, title, summary, poster, genres}) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__genres\">\n                    {genres.map((genre, index) => (\n                        <li key={index} className=\"genres__genre\">{genre}</li>)\n                    )}\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n            </div>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    // mount되자마자 isLoading은 기본적으로 true\n    isLoading: true,\n    movie: []\n  };\n\n  getMovies = async() => {\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading: false});\n  }\n\n  componentDidMount() {\n    this.getMovies()\n    // setTimeout(() => {\n    //   this.setState({isLoading: false})\n    // }, 6000)\n  }\n\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading\n           ? (<div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n           ) : (\n             <div className=\"movies\">\n               {movies.map(movie => (\n                <Movie \n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />))}\n             </div>)\n          }\n      </section>\n    )\n  }\n}\n\n\n\n\n// class component\n// 함수가 아니기 때문에 return 없음\n// render method 사용\n// class App extends React.Component {\n//   // state == object\n//   // component의 data를 넣을 공간, 바꾸고 싶은 data를 넣음\n//   state = {\n//     count: 0\n//   }\n\n//   add = () => {\n//     // 바뀐 값으로 새 state 설정\n//     // state를 refresh하고 render() 호출\n//     //this.setState({count: this.state.count + 1});\n\n//     // this.state 대신 current를 function 형식으로 사용 - 현재 state를 가져옴\n//     this.setState(current => ({count: current.count + 1}));\n\n//     // react는 render()를 refresh하지 않음\n//     //this.state.count = 1;\n//   };\n\n//   minus = () => {\n//     this.setState({count: this.state.count - 1});\n//   };\n\n//   // component가 렌더링된 후에 실행\n//   componentDidMount() {\n\n//   }\n\n//   // componenet가 업데이트 된 후 (render후 실행)\n//   componentDidUpdate() {\n\n//   }\n\n//   // react는 자동으로 모든 class component의 render()를 실행함\n//   render() {\n//     return (\n//       <div>\n//         {/* 꼭 this를 써야 함 */}\n//         <h1>The number is: {this.state.count}</h1>\n//         <button onClick={this.add}>Add</button>\n//         <button onClick={this.minus}>Minus</button>\n//       </div>\n//     )\n//   };\n// }\n\n\n\n\n\n// 함수형을 좀 더 권장하는 듯 - 단, state, setState는 못씀\n// function Food({ name, picture, rating }) {\n//   return (\n//     <div>\n//       <h1>I like {name}</h1>\n//       <h4>{rating}/5.0</h4>\n//       <img src={picture} alt={name}/>\n//     </div> \n//   );\n// }\n\n// const foodILike = [\n//   {\n//     id: 1,\n//     name: \"kimchi\",\n//     image: \"http://aeriskitchen.com/wp-content/uploads/2019/03/Kimchi_Soy_Bean_Sprout_Soup_01-.jpg\",\n//     rating: 5\n//   },\n//   {\n//     id: 2,\n//     name: \"samgiopsal\",\n//     image: \"http://aeriskitchen.com/wp-content/uploads/2019/03/Kimchi_Soy_Bean_Sprout_Soup_01-.jpg\",\n//     rating: 4.7\n//   }\n// ];\n\n// // Prop type 검사\n// Food.propTypes = {\n//   name: PropTypes.string.isRequired,  // only string\n//   image: PropTypes.string,  // string or undefined\n//   rating: PropTypes.number.isRequired\n// }\n\n// // function component\n// function App() {\n//   return (\n//     <div>\n//       {foodILike.map(food => (\n//         <Food key={food.id} name={food.name} picture={food.image} rating={food.rating}/>\n//       ))}\n\n//       {/* 함수로 따로 안빼고 위처럼 더 많이 쓰임\n//       {foodILike.map(renderfood)} */}\n//     </div>\n//   );\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// 한번에 하나의 component만을 렌더링 함\n// 따라서 모든 컴포넌트는 App에 들어가야 함\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}